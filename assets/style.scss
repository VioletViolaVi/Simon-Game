/******************************************************* universal */
* {
  list-style: none;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Comfortaa", cursive;
}

body {
  cursor: default;
  background-color: rgb(247, 194, 97);
}

#title {
  text-align: center;
  font-size: 3.3em;
  margin-top: 0.5em;
}

#container {
  margin: 4em auto 2em;
  text-align: center;
  border-radius: 50%;
  display: flex;
  justify-content: center;
}

/******************************************************* sass maps/styles */
$blackBorder: solid 0.5em black;

$curvedQuarters: (
  "greenTL": 100% 0 0 0,
  "redTR": 0 100% 0 0,
  "yellowBL": 0 0 0 100%,
  "blueBR": 0 0 100% 0,
);

$background_colors: (
  "greenBG": green,
  "redBG": red,
  "yellowBG": yellow,
  "blueBG": blue,
);

$hover_colors: (
  "greenHover": rgba(0, 128, 0, 0.664),
  "redHover": rgba(255, 0, 0, 0.63),
  "yellowHover": rgba(255, 255, 0, 0.582),
  "blueHover": rgba(0, 0, 255, 0.514),
);

// $breakpoints: (
//   "576px": 576px,
//   "768px": 768px,
//   "992px": 992px,
//   "1366px": 1366px,
// );

/******************************************************************************* quarters */
@mixin generalQuarters {
  float: left;
  width: 9em;
  height: 9em;
  border: $blackBorder;
  cursor: pointer;
}

.quarter {
  @include generalQuarters();
}

/******************************************************************************* colours */
@mixin greenQuarter($greenPlaceholder, $greenCurvePlaceholder) {
  background-color: $greenPlaceholder;
  border-radius: $greenCurvePlaceholder;
}

@mixin redQuarter($redPlaceholder, $redCurvePlaceholder) {
  background-color: $redPlaceholder;
  border-radius: $redCurvePlaceholder;
}

@mixin yellowQuarter($yellowPlaceholder, $yellowCurvePlaceholder) {
  background-color: $yellowPlaceholder;
  border-radius: $yellowCurvePlaceholder;
}

@mixin blueQuarter($bluePlaceholder, $blueCurvePlaceholder) {
  background-color: $bluePlaceholder;
  border-radius: $blueCurvePlaceholder;
}

/******************************************************************************* hover colours */
@mixin greenHoverQuarter($greenHoverPlaceholder) {
  background-color: $greenHoverPlaceholder;
}

@mixin redHoverQuarter($redHoverPlaceholder) {
  background-color: $redHoverPlaceholder;
}

@mixin yellowHoverQuarter($yellowHoverPlaceholder) {
  background-color: $yellowHoverPlaceholder;
}

@mixin blueHoverQuarter($blueHoverPlaceholder) {
  background-color: $blueHoverPlaceholder;
}

/******************************************************************************* full simon board */
@mixin simonBoard {
  width: 18em;
  height: 18em;
  border-radius: 50%;
}

#simonBoard {
  @include simonBoard();
  & .green {
    @include greenQuarter(
      map-get($background_colors, "greenBG"),
      map-get($curvedQuarters, "greenTL")
    );
  }
  & .green:hover {
    @include greenHoverQuarter(map-get($hover_colors, "greenHover"));
  }

  & .red {
    @include redQuarter(
      map-get($background_colors, "redBG"),
      map-get($curvedQuarters, "redTR")
    );
  }
  & .red:hover {
    @include redHoverQuarter(map-get($hover_colors, "redHover"));
  }

  & .yellow {
    @include yellowQuarter(
      map-get($background_colors, "yellowBG"),
      map-get($curvedQuarters, "yellowBL")
    );
  }
  & .yellow:hover {
    @include yellowHoverQuarter(map-get($hover_colors, "yellowHover"));
  }

  & .blue {
    @include blueQuarter(
      map-get($background_colors, "blueBG"),
      map-get($curvedQuarters, "blueBR")
    );
  }

  & .blue:hover {
    @include blueHoverQuarter(map-get($hover_colors, "blueHover"));
  }
}

/******************************************************************************* middle circle*/
@mixin generalMiddleCircle {
  border: $blackBorder;
  border-radius: 50%;
  background-color: white;
  height: 11em;
  width: 11em;
  z-index: 1;
  position: absolute;
  margin: 3.5em;
  padding-top: 1.2em;
}

@mixin stylesToyName {
  font-weight: 900;
  font-size: 1.5em;
  margin-bottom: 0.3em;
}

@mixin stylesScore {
  background-color: orange;
  display: inline;
  padding: 0.2em 0.9em 0em;
  border: solid 0.2em orangered;
  border-radius: 1em;
}

@mixin stylesStart {
  background-color: lightgray;
  border-radius: 10em;
  padding: 0.2em 0.5em 0em;
  cursor: pointer;
}

@mixin checkBox {
  position: relative;
  width: 3em;
  height: 1em;
  -webkit-appearance: none;
  background-color: pink;
  outline: none;
  border-radius: 10em;
  box-shadow: inset 0 0 1em rgba(0, 0, 0, 0.267);
  cursor: pointer;
}

@mixin checkBoxBefore {
  content: "";
  position: absolute;
  width: 1em;
  height: 1em;
  border-radius: 0.5em;
  top: 0em;
  left: 0em;
  background-color: purple;
  transition: 0.3s;
  transform: scale(1.1);
}

#middleCircle {
  @include generalMiddleCircle();
  & #toyName {
    @include stylesToyName();
  }
  & #score {
    @include stylesScore();
  }
  & #startBtn {
    @include stylesStart();
  }
  & #strictBtn {
    @include stylesStart();
  }
  & #startBtn:hover,
  & #strictBtn:hover {
    font-weight: 900;
  }
  & input[type="checkbox"] {
    @include checkBox();
  }
  & input:checked[type="checkbox"] {
    background-color: rgb(202, 137, 148);
  }
  & input[type="checkbox"]::before {
    @include checkBoxBefore();
  }
  & input:checked[type="checkbox"]::before {
    left: 2.1em;
  }
  & li:nth-child(3),
  & li:nth-child(4) {
    margin-top: 1em;
  }
}

@mixin stylesExtraInfo {
  text-align: center;
  font-size: 2em;
}

#extraInfo {
  @include stylesExtraInfo();
  & #highScore,
  & #restart {
    margin-top: 0.5em;
  }
  & #restart {
    cursor: pointer;
  }
  & #restart:hover {
    font-size: 1.1em;
  }
}

/******************************************************* breakpoints */
// @media (min-width: map-get($breakpoints, "576px")) {
//   #left {
//     left: 8.1em;
//   }

//   #right {
//     right: 8.1em;
//   }

//   #middle {
//     left: 6.5em;
//   }
// }
// @media (min-width: map-get($breakpoints, "768px")) {
//   #left {
//     left: 14.1em;
//   }

//   #right {
//     right: 14.1em;
//   }

//   #middle {
//     left: 9.5em;
//   }
// }
// @media (min-width: map-get($breakpoints, "992px")) {
//   #left {
//     left: 21.1em;
//   }

//   #right {
//     right: 21.1em;
//   }

//   #middle {
//     left: 13em;
//   }
// }
// @media (min-width: map-get($breakpoints, "1366px")) {
//   #left {
//     left: 33.1em;
//   }

//   #right {
//     right: 32.4em;
//   }

//   #middle {
//     left: 19em;
//   }
// }
